{"ast":null,"code":"var _jsxFileName = \"/Users/musaaqeel/Desktop/spotify-music-search-app/src/components/SearchResult.js\";\n\nconst SearchResult = props => {\n  const {\n    isValidSession,\n    loadMore,\n    result,\n    setCategory,\n    selectedCategory,\n    addSongToList\n  } = props;\n  const {\n    albums,\n    artists,\n    playlist\n  } = result;\n\n  if (!isValidSession()) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: {\n        pathname: '/',\n        state: {\n          session_expired: true\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 7\n      }\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"search-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, !_.isEmpty(albums.items) && /*#__PURE__*/React.createElement(\"button\", {\n    className: `${selectedCategory === 'albums' ? 'btn active' : 'btn'}`,\n    onClick: () => setCategory('albums'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }, \"Albums\"), !_.isEmpty(artists.items) && /*#__PURE__*/React.createElement(\"button\", {\n    className: `${selectedCategory === 'artists' ? 'btn active' : 'btn'}`,\n    onClick: () => setCategory('artists'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, \"Artists\"), !_.isEmpty(playlist.items) && /*#__PURE__*/React.createElement(\"button\", {\n    className: `${selectedCategory === 'playlist' ? 'btn active' : 'btn'}`,\n    onClick: () => setCategory('playlist'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, \"Playlists\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `${selectedCategory === 'songList' ? 'btn active' : 'btn'}`,\n    onClick: () => setCategory('songList'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Song List\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${selectedCategory === 'albums' ? '' : 'hide'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }, albums && /*#__PURE__*/React.createElement(AlbumsList, {\n    albums: albums,\n    addSongToList: addSongToList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 20\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${selectedCategory === 'artists' ? '' : 'hide'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, artists && /*#__PURE__*/React.createElement(ArtistsList, {\n    artists: artists,\n    addSongToList: addSongToList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${selectedCategory === 'playlist' ? '' : 'hide'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }\n  }, playlist && /*#__PURE__*/React.createElement(PlayList, {\n    playlist: playlist,\n    addSongToList: addSongToList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 22\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: `${selectedCategory === 'songList' ? '' : 'hide'}`,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SongList, {\n    songList: props.songList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  })), !_.isEmpty(result[selectedCategory]) && !_.isEmpty(result[selectedCategory].next) && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"load-more\",\n    onClick: () => loadMore(selectedCategory),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    variant: \"info\",\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }\n  }, \"Load More\")));\n};\n\nexport default SearchResult;","map":{"version":3,"sources":["/Users/musaaqeel/Desktop/spotify-music-search-app/src/components/SearchResult.js"],"names":["SearchResult","props","isValidSession","loadMore","result","setCategory","selectedCategory","addSongToList","albums","artists","playlist","pathname","state","session_expired","_","isEmpty","items","songList","next"],"mappings":"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","sourcesContent":["const SearchResult = (props) => {\n  const {\n    isValidSession,\n    loadMore,\n    result,\n    setCategory,\n    selectedCategory,\n    addSongToList\n  } = props;\n  const { albums, artists, playlist } = result;\n\n  if (!isValidSession()) {\n    return (\n      <Redirect\n        to={{\n          pathname: '/',\n          state: {\n            session_expired: true\n          }\n        }}\n      />\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <div className=\"search-buttons\">\n        {!_.isEmpty(albums.items) && (\n          <button\n            className={`${\n              selectedCategory === 'albums' ? 'btn active' : 'btn'\n            }`}\n            onClick={() => setCategory('albums')}\n          >\n            Albums\n          </button>\n        )}\n        {!_.isEmpty(artists.items) && (\n          <button\n            className={`${\n              selectedCategory === 'artists' ? 'btn active' : 'btn'\n            }`}\n            onClick={() => setCategory('artists')}\n          >\n            Artists\n          </button>\n        )}\n        {!_.isEmpty(playlist.items) && (\n          <button\n            className={`${\n              selectedCategory === 'playlist' ? 'btn active' : 'btn'\n            }`}\n            onClick={() => setCategory('playlist')}\n          >\n            Playlists\n          </button>\n        )}\n        <button\n          className={`${\n            selectedCategory === 'songList' ? 'btn active' : 'btn'\n          }`}\n          onClick={() => setCategory('songList')}\n        >\n          Song List\n        </button>\n      </div>\n      <div className={`${selectedCategory === 'albums' ? '' : 'hide'}`}>\n        {albums && <AlbumsList albums={albums} addSongToList={addSongToList} />}\n      </div>\n      <div className={`${selectedCategory === 'artists' ? '' : 'hide'}`}>\n        {artists && <ArtistsList artists={artists} addSongToList={addSongToList} />}\n      </div>\n      <div className={`${selectedCategory === 'playlist' ? '' : 'hide'}`}>\n        {playlist && <PlayList playlist={playlist} addSongToList={addSongToList} />}\n      </div>\n      <div className={`${selectedCategory === 'songList' ? '' : 'hide'}`}>\n        <SongList songList={props.songList} />\n      </div>\n      {!_.isEmpty(result[selectedCategory]) &&\n        !_.isEmpty(result[selectedCategory].next) && (\n          <div className=\"load-more\" onClick={() => loadMore(selectedCategory)}>\n            <Button variant=\"info\" type=\"button\">\n              Load More\n            </Button>\n          </div>\n        )}\n    </React.Fragment>\n  );\n};\n\nexport default SearchResult;\n"]},"metadata":{},"sourceType":"module"}