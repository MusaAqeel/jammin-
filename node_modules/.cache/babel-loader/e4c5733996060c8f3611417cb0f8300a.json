{"ast":null,"code":"var _jsxFileName = \"/Users/musaaqeel/Desktop/spotify-music-search-app/src/components/Dashboard.js\";\nimport React, { useState } from 'react';\nimport { initiateGetResult, initiateLoadMoreAlbums, initiateLoadMorePlaylist, initiateLoadMoreArtists } from '../actions/result';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport SearchResult from './SearchResult';\nimport SearchForm from './SearchForm';\nimport Header from './Header';\nimport Loader from './Loader';\nimport SongList from './SongList';\n\nconst Dashboard = props => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('albums');\n  const [songList, setSongList] = useState([]);\n  const {\n    isValidSession,\n    history\n  } = props;\n\n  const handleSearch = searchTerm => {\n    if (isValidSession()) {\n      setIsLoading(true);\n      props.dispatch(initiateGetResult(searchTerm)).then(() => {\n        setIsLoading(false);\n        setSelectedCategory('albums');\n      });\n    } else {\n      history.push({\n        pathname: '/',\n        state: {\n          session_expired: true\n        }\n      });\n    }\n  };\n\n  const loadMore = async type => {\n    if (isValidSession()) {\n      const {\n        dispatch,\n        albums,\n        artists,\n        playlist\n      } = props;\n      setIsLoading(true);\n\n      switch (type) {\n        case 'albums':\n          await dispatch(initiateLoadMoreAlbums(albums.next));\n          break;\n\n        case 'artists':\n          await dispatch(initiateLoadMoreArtists(artists.next));\n          break;\n\n        case 'playlist':\n          await dispatch(initiateLoadMorePlaylist(playlist.next));\n          break;\n\n        default:\n      }\n\n      setIsLoading(false);\n    } else {\n      history.push({\n        pathname: '/',\n        state: {\n          session_expired: true\n        }\n      });\n    }\n  };\n\n  const setCategory = category => {\n    setSelectedCategory(category);\n  };\n\n  const addSongToList = song => {\n    setSongList([...songList, song]);\n  };\n\n  const {\n    albums,\n    artists,\n    playlist\n  } = props;\n  const result = {\n    albums,\n    artists,\n    playlist\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, isValidSession() ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(SearchForm, {\n    handleSearch: handleSearch,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Loader, {\n    show: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }\n  }, \"Loading...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(SearchResult, {\n    result: result,\n    loadMore: loadMore,\n    setCategory: setCategory,\n    selectedCategory: selectedCategory,\n    isValidSession: isValidSession,\n    addSongToList: addSongToList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(SongList, {\n    songList: songList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }))) : /*#__PURE__*/React.createElement(Redirect, {\n    to: {\n      pathname: '/',\n      state: {\n        session_expired: true\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst mapStateToProps = state => {\n  return {\n    albums: state.albums,\n    artists: state.artists,\n    playlist: state.playlist\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);","map":{"version":3,"sources":["/Users/musaaqeel/Desktop/spotify-music-search-app/src/components/Dashboard.js"],"names":["React","useState","initiateGetResult","initiateLoadMoreAlbums","initiateLoadMorePlaylist","initiateLoadMoreArtists","connect","Redirect","SearchResult","SearchForm","Header","Loader","SongList","Dashboard","props","isLoading","setIsLoading","selectedCategory","setSelectedCategory","songList","setSongList","isValidSession","history","handleSearch","searchTerm","dispatch","then","push","pathname","state","session_expired","loadMore","type","albums","artists","playlist","next","setCategory","category","addSongToList","song","result","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport {\n  initiateGetResult,\n  initiateLoadMoreAlbums,\n  initiateLoadMorePlaylist,\n  initiateLoadMoreArtists\n} from '../actions/result';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport SearchResult from './SearchResult';\nimport SearchForm from './SearchForm';\nimport Header from './Header';\nimport Loader from './Loader';\nimport SongList from './SongList';\n\nconst Dashboard = (props) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedCategory, setSelectedCategory] = useState('albums');\n  const [songList, setSongList] = useState([]);\n  const { isValidSession, history } = props;\n\n  const handleSearch = (searchTerm) => {\n    if (isValidSession()) {\n      setIsLoading(true);\n      props.dispatch(initiateGetResult(searchTerm)).then(() => {\n        setIsLoading(false);\n        setSelectedCategory('albums');\n      });\n    } else {\n      history.push({\n        pathname: '/',\n        state: {\n          session_expired: true\n        }\n      });\n    }\n  };\n\n  const loadMore = async (type) => {\n    if (isValidSession()) {\n      const { dispatch, albums, artists, playlist } = props;\n      setIsLoading(true);\n      switch (type) {\n        case 'albums':\n          await dispatch(initiateLoadMoreAlbums(albums.next));\n          break;\n        case 'artists':\n          await dispatch(initiateLoadMoreArtists(artists.next));\n          break;\n        case 'playlist':\n          await dispatch(initiateLoadMorePlaylist(playlist.next));\n          break;\n        default:\n      }\n      setIsLoading(false);\n    } else {\n      history.push({\n        pathname: '/',\n        state: {\n          session_expired: true\n        }\n      });\n    }\n  };\n\n  const setCategory = (category) => {\n    setSelectedCategory(category);\n  };\n\n  const addSongToList = (song) => {\n    setSongList([...songList, song]);\n  };\n\n  const { albums, artists, playlist } = props;\n  const result = { albums, artists, playlist };\n\n  return (\n    <React.Fragment>\n      {isValidSession() ? (\n        <div>\n          <Header />\n          <SearchForm handleSearch={handleSearch} />\n          <Loader show={isLoading}>Loading...</Loader>\n          <div className=\"dashboard-container\">\n            <SearchResult\n              result={result}\n              loadMore={loadMore}\n              setCategory={setCategory}\n              selectedCategory={selectedCategory}\n              isValidSession={isValidSession}\n              addSongToList={addSongToList}\n            />\n            <SongList songList={songList} />\n          </div>\n        </div>\n      ) : (\n        <Redirect\n          to={{\n            pathname: '/',\n            state: {\n              session_expired: true\n            }\n          }}\n        />\n      )}\n    </React.Fragment>\n  );\n};\nconst mapStateToProps = (state) => {\n  return {\n    albums: state.albums,\n    artists: state.artists,\n    playlist: state.playlist\n  };\n};\n\nexport default connect(mapStateToProps)(Dashboard);\n"]},"metadata":{},"sourceType":"module"}